syntax = "proto3";

option csharp_namespace = "Swisschain.Sirius.Api.ApiContract.Asset";

import "common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

package swisschain.sirius.api.assets;

service Assets {
    rpc Search (AssetSearchRequest) returns (AssetSearchResponse);
    rpc AddAttributes (AddAssetAttributesRequest) returns (AddAssetAttributesResponse);
}

message AddAssetAttributesRequest {
    string request_id = 1;
    int64 asset_id = 2;
    BrokerageAssetAttributesInfoRequest brokerage = 3;
    AmlAssetAttributesInfoRequest aml = 4;
}

message BrokerageAssetAttributesInfoRequest {
    swisschain.sirius.api.common.BigDecimal min_deposit_threshold = 1;
    swisschain.sirius.api.common.BigDecimal min_withdrawal_amount = 2;
}

message AmlAssetAttributesInfoRequest {
    AmlChainalysisAssetAttributesInfo chainalysis = 1;
    AmlMerkleScienceAssetAttributesInfo merkle_science = 2;
}

message AmlChainalysisAssetAttributesInfo {
    string symbol = 1;
    bool is_check_withdrawals_enabled = 2;
    bool is_check_deposits_enabled = 3;
    bool is_notify_withdrawals_enabled = 4;
    ChainalysisTransferFormat transfer_format = 5;
}

message AmlMerkleScienceAssetAttributesInfo {
  google.protobuf.StringValue symbol = 1;
  int32 currency = 2;
  bool is_disabled = 3;
}

enum ChainalysisTransferFormat {
    HASH_AND_INDEX = 0;
    HASH_AND_ADDRESS = 1;
    HASH = 2;
}

message AddAssetAttributesResponse {
    oneof body{
        AssetResponse response = 1;
        common.ErrorResponseBody error = 2;
    }
}
message AssetSearchRequest {  
    google.protobuf.Int64Value id = 1;  
    google.protobuf.StringValue blockchain_id = 2;        
    google.protobuf.StringValue symbol = 3;        
    google.protobuf.StringValue  address = 4;
    google.protobuf.Int32Value accuracy = 5;
    swisschain.sirius.api.common.PaginationInt64 pagination = 6;
}

message AssetSearchResponse {
    oneof result {
        AssetSearchResponseBody body = 1;
        swisschain.sirius.api.common.ErrorResponseBody error = 2;
    } 
}

message AssetSearchResponseBody {
    swisschain.sirius.api.common.PaginatedInt64Response pagination = 1;
    repeated AssetResponse items = 2;
}

message AssetResponse {
    int64 id = 1;
    string blockchain_id = 2;
    string symbol = 3;
    google.protobuf.StringValue address = 4;  
    int32 accuracy = 5;
    BrokerageAssetAttributesInfo brokerage = 6;
    AmlAssetAttributesInfo aml = 7;
}

message BrokerageAssetAttributesInfo {
    int64 id = 1;
    google.protobuf.Timestamp created_at = 2;
    google.protobuf.Timestamp updated_at = 3;
    swisschain.sirius.api.common.BigDecimal min_deposit_threshold = 4;
    swisschain.sirius.api.common.BigDecimal min_withdrawal_amount = 5;
}

message AmlAssetAttributesInfo {
    int64 id = 1;
    AmlChainalysisAssetAttributesInfo chainalysis = 2;
    AmlMerkleScienceAssetAttributesInfo merkle_science = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
}
