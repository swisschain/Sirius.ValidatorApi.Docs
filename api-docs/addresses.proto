syntax = "proto3";

option csharp_namespace = "Swisschain.Sirius.Api.ApiContract.Address";

import "common.proto";
import "google/protobuf/wrappers.proto";

package swisschain.sirius.api.addresses;

service Addresses {
  rpc IsValid (AddressIsValidRequest) returns (AddressIsValidResponse);

  rpc GetFormats (AddressGetFormatsRequest) returns (AddressGetFormatsResponse);
}

message AddressIsValidRequest {
  string blockchain_id = 1;
  google.protobuf.StringValue user_native_id = 2;
  google.protobuf.Int64Value user_id = 3;
  repeated int64 aml_connection_ids = 4;
  google.protobuf.Int64Value asset_id = 5; 
  google.protobuf.Int64Value broker_account_id = 6; 
  google.protobuf.Int64Value account_id = 7; 
  string address = 8;
  google.protobuf.StringValue tag = 9;
  swisschain.sirius.api.common.NullableTagType tag_type = 10;
  google.protobuf.StringValue account_reference_id = 11; 
}

message AddressIsValidResponse {
    oneof result {
      AddressIsValidResponseBody body = 1;
      swisschain.sirius.api.common.ErrorResponseBody error = 2;
    } 
}

message AddressIsValidResponseBody {
  bool is_format_valid = 1;

  repeated AddressValidityResolution aml_checks = 2;
}

message AddressValidityResolution {
    int64 aml_connection_id = 1;
    string aml_connection_name = 2;
    string description = 3;
    AddressAmlResolution resolution = 4;
}

message AddressGetFormatsRequest {
  string blockchain_id = 1;
  
  string address = 2;
}

message AddressGetFormatsResponse {
  oneof result {
    AddressGetFormatsResponseBody body = 1;
    swisschain.sirius.api.common.ErrorResponseBody error = 2;
  } 
}

message AddressGetFormatsResponseBody {
  repeated AddressFormat formats = 1;
}

message AddressFormat {
  string address = 1;

  string format_name = 2;
}

enum AddressAmlResolution {
  HIGH_RISK = 0;

  NORMAL = 1;

  UNKNOWN = 2;

  ASSET_NOT_CONFIGURED = 3;

  PROVIDER_FAILURE = 4;

  NOT_ENOUGH_ARGUMENTS = 5;

  DISABLED = 6;
}